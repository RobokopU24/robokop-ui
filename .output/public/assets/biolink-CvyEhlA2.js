import{a as o}from"./queryGraph-B-h_kUel.js";import{c as i}from"./listItemTextClasses-BH3kCDiK.js";import{a as d}from"./AlertProvider-CS83QDva.js";import{R as h}from"./main-Bxfe4Qal.js";async function s(e,r,a,t){const n={url:`/api/robokache/${e}`,method:r,data:a,withCredentials:!0,headers:{Accept:"application/json","Content-Type":"application/json"}};t&&(n.headers.Authorization=`Bearer ${t}`);try{return(await i(n)).data}catch(c){return o.handleAxiosError(c)}}const p={async getQuestions(e){return s("questions","GET",null,e)},async getAnswers(e,r){return s(`answers/${e}`,"GET",null,r)},async getQuestion(e,r){return s(`question/${e}`,"GET",null,r)},async getAnswer(e,r){return s(`question/${e}`,"GET",null,r)},async getQuestionData(e,r){const a={url:`/api/robokache/question_data/${e}`,method:"GET",withCredentials:!0,headers:{},transformResponse:t=>t};r&&(a.headers.Authorization=`Bearer ${r}`);try{return(await i(a)).data}catch(t){return o.handleAxiosError(t)}},async getAnswerData(e,r){const a={url:`/api/robokache/answer_data/${e}`,method:"GET",withCredentials:!0,headers:{},transformResponse:t=>t};r&&(a.headers.Authorization=`Bearer ${r}`);try{return(await i(a)).data}catch(t){return o.handleAxiosError(t)}},async setQuestionData(e,r,a){const t={url:`/api/robokache/question_data/${e}`,method:"PUT",data:r,withCredentials:!0,headers:{}};t.headers.Authorization=`Bearer ${a}`;try{return(await i(t)).data}catch(n){return o.handleAxiosError(n)}},async setAnswerData(e,r,a){const t={url:`/api/robokache/answer_data/${e}`,method:"PUT",data:r,withCredentials:!0,headers:{}};t.headers.Authorization=`Bearer ${a}`;try{return(await i(t)).data}catch(n){return o.handleAxiosError(n)}},async createQuestion(e,r){return s("question","POST",e,r)},async createAnswer(e,r){return s("answer","POST",e,r)},async updateQuestion(e,r){return s(`question/${e.id}`,"PUT",e,r)},async updateAnswer(e,r){return s(`answer/${e.id}`,"PUT",e,r)},async deleteQuestion(e,r){return s(`question/${e}`,"DELETE",void 0,r)},async deleteAnswer(e,r){return s(`answer/${e}`,"DELETE",void 0,r)}},u={async getQuickAnswer(e,r){try{return(await i.post(`/api/quick_answer/?ara=${e}`,r)).data}catch(a){return o.handleAxiosError(a)}},async getAnswer(e,r,a){const t={url:"/api/answer",method:"POST",withCredentials:!0,headers:{},params:{questionId:r,ara:e}};a&&(t.headers.Authorization=`Bearer ${a}`);try{return(await i(t)).data}catch(n){return o.handleAxiosError(n)}}},l={getQuickAnswer:u.getQuickAnswer,getAnswer:u.getAnswer},w={async getModelSpecification(){let e;try{e=await i.get("/api/biolink")}catch(r){return o.handleAxiosError(r)}return e.data}},y={async entityLookup(e,r,a,t){const n={headers:{"Content-Type":"text/plain"},params:{string:e,type:t,limit:r},cancelToken:a};try{return(await i.post("/api/name_resolver",{},n)).data}catch(c){return d.isCancel(c)?{}:o.handleAxiosError(c)}}},A={entityLookup:y.entityLookup},m={cache:p,ara:l,biolink:w,nameResolver:A},T=h.createContext({});export{m as A,T as B};
