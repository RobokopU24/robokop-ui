/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppLayoutRouteImport } from './routes/_appLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppLayoutWelcomeRouteImport } from './routes/_appLayout/welcome'
import { Route as AppLayoutTutorialRouteImport } from './routes/_appLayout/tutorial'
import { Route as AppLayoutTermsofserviceRouteImport } from './routes/_appLayout/termsofservice'
import { Route as AppLayoutQuestionBuilderRouteImport } from './routes/_appLayout/question-builder'
import { Route as AppLayoutOauthCallbackRouteImport } from './routes/_appLayout/oauth-callback'
import { Route as AppLayoutGuideRouteImport } from './routes/_appLayout/guide'
import { Route as AppLayoutAboutRouteImport } from './routes/_appLayout/about'
import { Route as AppLayoutProfileIndexRouteImport } from './routes/_appLayout/profile/index'
import { Route as AppLayoutExploreIndexRouteImport } from './routes/_appLayout/explore/index'
import { Route as AppLayoutDetailsIndexRouteImport } from './routes/_appLayout/details/index'
import { Route as AppLayoutAnswerIndexRouteImport } from './routes/_appLayout/answer/index'
import { Route as AppLayoutActivateUserIndexRouteImport } from './routes/_appLayout/activate-user/index'
import { Route as AppLayoutShareShare_idIndexRouteImport } from './routes/_appLayout/share/$share_id/index'
import { Route as AppLayoutExploreGraphsIndexRouteImport } from './routes/_appLayout/explore/graphs/index'
import { Route as AppLayoutExploreDrugChemicalIndexRouteImport } from './routes/_appLayout/explore/drug-chemical/index'
import { Route as AppLayoutDetailsDetails_idIndexRouteImport } from './routes/_appLayout/details/$details_id/index'
import { Route as AppLayoutAnswerAnswer_idIndexRouteImport } from './routes/_appLayout/answer/$answer_id/index'
import { Route as AppLayoutExploreGraphsGraph_idIndexRouteImport } from './routes/_appLayout/explore/graphs/$graph_id/index'

const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_appLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutWelcomeRoute = AppLayoutWelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutTutorialRoute = AppLayoutTutorialRouteImport.update({
  id: '/tutorial',
  path: '/tutorial',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutTermsofserviceRoute = AppLayoutTermsofserviceRouteImport.update({
  id: '/termsofservice',
  path: '/termsofservice',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutQuestionBuilderRoute =
  AppLayoutQuestionBuilderRouteImport.update({
    id: '/question-builder',
    path: '/question-builder',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutOauthCallbackRoute = AppLayoutOauthCallbackRouteImport.update({
  id: '/oauth-callback',
  path: '/oauth-callback',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutGuideRoute = AppLayoutGuideRouteImport.update({
  id: '/guide',
  path: '/guide',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutAboutRoute = AppLayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutProfileIndexRoute = AppLayoutProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutExploreIndexRoute = AppLayoutExploreIndexRouteImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutDetailsIndexRoute = AppLayoutDetailsIndexRouteImport.update({
  id: '/details/',
  path: '/details/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutAnswerIndexRoute = AppLayoutAnswerIndexRouteImport.update({
  id: '/answer/',
  path: '/answer/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutActivateUserIndexRoute =
  AppLayoutActivateUserIndexRouteImport.update({
    id: '/activate-user/',
    path: '/activate-user/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutShareShare_idIndexRoute =
  AppLayoutShareShare_idIndexRouteImport.update({
    id: '/share/$share_id/',
    path: '/share/$share_id/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutExploreGraphsIndexRoute =
  AppLayoutExploreGraphsIndexRouteImport.update({
    id: '/explore/graphs/',
    path: '/explore/graphs/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutExploreDrugChemicalIndexRoute =
  AppLayoutExploreDrugChemicalIndexRouteImport.update({
    id: '/explore/drug-chemical/',
    path: '/explore/drug-chemical/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutDetailsDetails_idIndexRoute =
  AppLayoutDetailsDetails_idIndexRouteImport.update({
    id: '/details/$details_id/',
    path: '/details/$details_id/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutAnswerAnswer_idIndexRoute =
  AppLayoutAnswerAnswer_idIndexRouteImport.update({
    id: '/answer/$answer_id/',
    path: '/answer/$answer_id/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutExploreGraphsGraph_idIndexRoute =
  AppLayoutExploreGraphsGraph_idIndexRouteImport.update({
    id: '/explore/graphs/$graph_id/',
    path: '/explore/graphs/$graph_id/',
    getParentRoute: () => AppLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AppLayoutAboutRoute
  '/guide': typeof AppLayoutGuideRoute
  '/oauth-callback': typeof AppLayoutOauthCallbackRoute
  '/question-builder': typeof AppLayoutQuestionBuilderRoute
  '/termsofservice': typeof AppLayoutTermsofserviceRoute
  '/tutorial': typeof AppLayoutTutorialRoute
  '/welcome': typeof AppLayoutWelcomeRoute
  '/activate-user': typeof AppLayoutActivateUserIndexRoute
  '/answer': typeof AppLayoutAnswerIndexRoute
  '/details': typeof AppLayoutDetailsIndexRoute
  '/explore': typeof AppLayoutExploreIndexRoute
  '/profile': typeof AppLayoutProfileIndexRoute
  '/answer/$answer_id': typeof AppLayoutAnswerAnswer_idIndexRoute
  '/details/$details_id': typeof AppLayoutDetailsDetails_idIndexRoute
  '/explore/drug-chemical': typeof AppLayoutExploreDrugChemicalIndexRoute
  '/explore/graphs': typeof AppLayoutExploreGraphsIndexRoute
  '/share/$share_id': typeof AppLayoutShareShare_idIndexRoute
  '/explore/graphs/$graph_id': typeof AppLayoutExploreGraphsGraph_idIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AppLayoutAboutRoute
  '/guide': typeof AppLayoutGuideRoute
  '/oauth-callback': typeof AppLayoutOauthCallbackRoute
  '/question-builder': typeof AppLayoutQuestionBuilderRoute
  '/termsofservice': typeof AppLayoutTermsofserviceRoute
  '/tutorial': typeof AppLayoutTutorialRoute
  '/welcome': typeof AppLayoutWelcomeRoute
  '/activate-user': typeof AppLayoutActivateUserIndexRoute
  '/answer': typeof AppLayoutAnswerIndexRoute
  '/details': typeof AppLayoutDetailsIndexRoute
  '/explore': typeof AppLayoutExploreIndexRoute
  '/profile': typeof AppLayoutProfileIndexRoute
  '/answer/$answer_id': typeof AppLayoutAnswerAnswer_idIndexRoute
  '/details/$details_id': typeof AppLayoutDetailsDetails_idIndexRoute
  '/explore/drug-chemical': typeof AppLayoutExploreDrugChemicalIndexRoute
  '/explore/graphs': typeof AppLayoutExploreGraphsIndexRoute
  '/share/$share_id': typeof AppLayoutShareShare_idIndexRoute
  '/explore/graphs/$graph_id': typeof AppLayoutExploreGraphsGraph_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_appLayout': typeof AppLayoutRouteWithChildren
  '/_appLayout/about': typeof AppLayoutAboutRoute
  '/_appLayout/guide': typeof AppLayoutGuideRoute
  '/_appLayout/oauth-callback': typeof AppLayoutOauthCallbackRoute
  '/_appLayout/question-builder': typeof AppLayoutQuestionBuilderRoute
  '/_appLayout/termsofservice': typeof AppLayoutTermsofserviceRoute
  '/_appLayout/tutorial': typeof AppLayoutTutorialRoute
  '/_appLayout/welcome': typeof AppLayoutWelcomeRoute
  '/_appLayout/activate-user/': typeof AppLayoutActivateUserIndexRoute
  '/_appLayout/answer/': typeof AppLayoutAnswerIndexRoute
  '/_appLayout/details/': typeof AppLayoutDetailsIndexRoute
  '/_appLayout/explore/': typeof AppLayoutExploreIndexRoute
  '/_appLayout/profile/': typeof AppLayoutProfileIndexRoute
  '/_appLayout/answer/$answer_id/': typeof AppLayoutAnswerAnswer_idIndexRoute
  '/_appLayout/details/$details_id/': typeof AppLayoutDetailsDetails_idIndexRoute
  '/_appLayout/explore/drug-chemical/': typeof AppLayoutExploreDrugChemicalIndexRoute
  '/_appLayout/explore/graphs/': typeof AppLayoutExploreGraphsIndexRoute
  '/_appLayout/share/$share_id/': typeof AppLayoutShareShare_idIndexRoute
  '/_appLayout/explore/graphs/$graph_id/': typeof AppLayoutExploreGraphsGraph_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/guide'
    | '/oauth-callback'
    | '/question-builder'
    | '/termsofservice'
    | '/tutorial'
    | '/welcome'
    | '/activate-user'
    | '/answer'
    | '/details'
    | '/explore'
    | '/profile'
    | '/answer/$answer_id'
    | '/details/$details_id'
    | '/explore/drug-chemical'
    | '/explore/graphs'
    | '/share/$share_id'
    | '/explore/graphs/$graph_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/guide'
    | '/oauth-callback'
    | '/question-builder'
    | '/termsofservice'
    | '/tutorial'
    | '/welcome'
    | '/activate-user'
    | '/answer'
    | '/details'
    | '/explore'
    | '/profile'
    | '/answer/$answer_id'
    | '/details/$details_id'
    | '/explore/drug-chemical'
    | '/explore/graphs'
    | '/share/$share_id'
    | '/explore/graphs/$graph_id'
  id:
    | '__root__'
    | '/'
    | '/_appLayout'
    | '/_appLayout/about'
    | '/_appLayout/guide'
    | '/_appLayout/oauth-callback'
    | '/_appLayout/question-builder'
    | '/_appLayout/termsofservice'
    | '/_appLayout/tutorial'
    | '/_appLayout/welcome'
    | '/_appLayout/activate-user/'
    | '/_appLayout/answer/'
    | '/_appLayout/details/'
    | '/_appLayout/explore/'
    | '/_appLayout/profile/'
    | '/_appLayout/answer/$answer_id/'
    | '/_appLayout/details/$details_id/'
    | '/_appLayout/explore/drug-chemical/'
    | '/_appLayout/explore/graphs/'
    | '/_appLayout/share/$share_id/'
    | '/_appLayout/explore/graphs/$graph_id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_appLayout': {
      id: '/_appLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appLayout/welcome': {
      id: '/_appLayout/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof AppLayoutWelcomeRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/tutorial': {
      id: '/_appLayout/tutorial'
      path: '/tutorial'
      fullPath: '/tutorial'
      preLoaderRoute: typeof AppLayoutTutorialRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/termsofservice': {
      id: '/_appLayout/termsofservice'
      path: '/termsofservice'
      fullPath: '/termsofservice'
      preLoaderRoute: typeof AppLayoutTermsofserviceRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/question-builder': {
      id: '/_appLayout/question-builder'
      path: '/question-builder'
      fullPath: '/question-builder'
      preLoaderRoute: typeof AppLayoutQuestionBuilderRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/oauth-callback': {
      id: '/_appLayout/oauth-callback'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof AppLayoutOauthCallbackRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/guide': {
      id: '/_appLayout/guide'
      path: '/guide'
      fullPath: '/guide'
      preLoaderRoute: typeof AppLayoutGuideRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/about': {
      id: '/_appLayout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppLayoutAboutRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/profile/': {
      id: '/_appLayout/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppLayoutProfileIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/explore/': {
      id: '/_appLayout/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AppLayoutExploreIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/details/': {
      id: '/_appLayout/details/'
      path: '/details'
      fullPath: '/details'
      preLoaderRoute: typeof AppLayoutDetailsIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/answer/': {
      id: '/_appLayout/answer/'
      path: '/answer'
      fullPath: '/answer'
      preLoaderRoute: typeof AppLayoutAnswerIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/activate-user/': {
      id: '/_appLayout/activate-user/'
      path: '/activate-user'
      fullPath: '/activate-user'
      preLoaderRoute: typeof AppLayoutActivateUserIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/share/$share_id/': {
      id: '/_appLayout/share/$share_id/'
      path: '/share/$share_id'
      fullPath: '/share/$share_id'
      preLoaderRoute: typeof AppLayoutShareShare_idIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/explore/graphs/': {
      id: '/_appLayout/explore/graphs/'
      path: '/explore/graphs'
      fullPath: '/explore/graphs'
      preLoaderRoute: typeof AppLayoutExploreGraphsIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/explore/drug-chemical/': {
      id: '/_appLayout/explore/drug-chemical/'
      path: '/explore/drug-chemical'
      fullPath: '/explore/drug-chemical'
      preLoaderRoute: typeof AppLayoutExploreDrugChemicalIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/details/$details_id/': {
      id: '/_appLayout/details/$details_id/'
      path: '/details/$details_id'
      fullPath: '/details/$details_id'
      preLoaderRoute: typeof AppLayoutDetailsDetails_idIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/answer/$answer_id/': {
      id: '/_appLayout/answer/$answer_id/'
      path: '/answer/$answer_id'
      fullPath: '/answer/$answer_id'
      preLoaderRoute: typeof AppLayoutAnswerAnswer_idIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/explore/graphs/$graph_id/': {
      id: '/_appLayout/explore/graphs/$graph_id/'
      path: '/explore/graphs/$graph_id'
      fullPath: '/explore/graphs/$graph_id'
      preLoaderRoute: typeof AppLayoutExploreGraphsGraph_idIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
  }
}

interface AppLayoutRouteChildren {
  AppLayoutAboutRoute: typeof AppLayoutAboutRoute
  AppLayoutGuideRoute: typeof AppLayoutGuideRoute
  AppLayoutOauthCallbackRoute: typeof AppLayoutOauthCallbackRoute
  AppLayoutQuestionBuilderRoute: typeof AppLayoutQuestionBuilderRoute
  AppLayoutTermsofserviceRoute: typeof AppLayoutTermsofserviceRoute
  AppLayoutTutorialRoute: typeof AppLayoutTutorialRoute
  AppLayoutWelcomeRoute: typeof AppLayoutWelcomeRoute
  AppLayoutActivateUserIndexRoute: typeof AppLayoutActivateUserIndexRoute
  AppLayoutAnswerIndexRoute: typeof AppLayoutAnswerIndexRoute
  AppLayoutDetailsIndexRoute: typeof AppLayoutDetailsIndexRoute
  AppLayoutExploreIndexRoute: typeof AppLayoutExploreIndexRoute
  AppLayoutProfileIndexRoute: typeof AppLayoutProfileIndexRoute
  AppLayoutAnswerAnswer_idIndexRoute: typeof AppLayoutAnswerAnswer_idIndexRoute
  AppLayoutDetailsDetails_idIndexRoute: typeof AppLayoutDetailsDetails_idIndexRoute
  AppLayoutExploreDrugChemicalIndexRoute: typeof AppLayoutExploreDrugChemicalIndexRoute
  AppLayoutExploreGraphsIndexRoute: typeof AppLayoutExploreGraphsIndexRoute
  AppLayoutShareShare_idIndexRoute: typeof AppLayoutShareShare_idIndexRoute
  AppLayoutExploreGraphsGraph_idIndexRoute: typeof AppLayoutExploreGraphsGraph_idIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutAboutRoute: AppLayoutAboutRoute,
  AppLayoutGuideRoute: AppLayoutGuideRoute,
  AppLayoutOauthCallbackRoute: AppLayoutOauthCallbackRoute,
  AppLayoutQuestionBuilderRoute: AppLayoutQuestionBuilderRoute,
  AppLayoutTermsofserviceRoute: AppLayoutTermsofserviceRoute,
  AppLayoutTutorialRoute: AppLayoutTutorialRoute,
  AppLayoutWelcomeRoute: AppLayoutWelcomeRoute,
  AppLayoutActivateUserIndexRoute: AppLayoutActivateUserIndexRoute,
  AppLayoutAnswerIndexRoute: AppLayoutAnswerIndexRoute,
  AppLayoutDetailsIndexRoute: AppLayoutDetailsIndexRoute,
  AppLayoutExploreIndexRoute: AppLayoutExploreIndexRoute,
  AppLayoutProfileIndexRoute: AppLayoutProfileIndexRoute,
  AppLayoutAnswerAnswer_idIndexRoute: AppLayoutAnswerAnswer_idIndexRoute,
  AppLayoutDetailsDetails_idIndexRoute: AppLayoutDetailsDetails_idIndexRoute,
  AppLayoutExploreDrugChemicalIndexRoute:
    AppLayoutExploreDrugChemicalIndexRoute,
  AppLayoutExploreGraphsIndexRoute: AppLayoutExploreGraphsIndexRoute,
  AppLayoutShareShare_idIndexRoute: AppLayoutShareShare_idIndexRoute,
  AppLayoutExploreGraphsGraph_idIndexRoute:
    AppLayoutExploreGraphsGraph_idIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppLayoutRoute: AppLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
